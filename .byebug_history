self.expenses
self
continue
team_params
params
continue
User
@team.users.count
@team.users
@team
@team.update(team_params)
team_params
@team.users
@team
params
continue
@team.users
@team
@team.update(team_params)
@team
params
continue
User.all.reject { |user| users.include?(user) }
self.usersUser.all.reject { |user| users.include?(user) }
self.users
self
team_users
continue
params
parms
parma
continue
#
params
continue
team.expenses.where(user_id: id).sum(:amount)
continue
@expense.save
@expense = current_user.expenses.build( params.require(:expense).permit(:reason, :amount, :team_id))
params.require(:expense).permit(:reason, :amount, :team_id)
@expense = current_user.expenses.build
@expense
params
continue
current_user.expenses
current_user
continue
a = params.require(:team).permit(:name, user_ids: [])
Team.last.users
Team.last
f
f.save
f = Team.new(a)
Team.new(a)
a = params.require(:team).permit(:name, user_ids: [])
params.require(:team).permit(:name, user_ids: [])
continue
params.require(:team).permit(:name, user_ids: [])
params.require(:teams).permit(:name, user_ids: [])
continue
params.require(:teams).permit(:name, user_ids: [])
params.require(:team).permit(:name, user_ids: [])
params
params.require(:team).permit(:name, :user_ids)
continue
 params.require(:teams).permit('user_ids')
 params.require(:teams).permit(:user_ids)
 params.require(:teams).permit(
 params.require(:agreement).permit(
params
continue
params
continue
params
continue
params.require(:team).permit(:name)
params.require(:category).permit(:name)
@team = Team.buiparams.require(:category).permit(:name)
params
continue
params
continue
@teams
continue
@teams = Team.all
